'use strict';

var ed25519 = require('@stablelib/ed25519');

function _interopNamespace(e) {
  if (e && e.__esModule) return e;
  var n = Object.create(null);
  if (e) {
    Object.keys(e).forEach(function (k) {
      if (k !== 'default') {
        var d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: function () { return e[k]; }
        });
      }
    });
  }
  n["default"] = e;
  return Object.freeze(n);
}

var ed25519__namespace = /*#__PURE__*/_interopNamespace(ed25519);

/*!
 * Copyright (c) 2020 Digital Bazaar, Inc. All rights reserved.
 */

// browser MUST provide "crypto.getRandomValues"
const crypto = self && (self.crypto || self.msCrypto);
if(!crypto.getRandomValues) {
  throw new Error('Browser does not provide "crypto.getRandomValues".');
}

async function generateKeyPair() {
  const seed = new Uint8Array(32);
  crypto.getRandomValues(seed);
  return ed25519__namespace.generateKeyPairFromSeed(seed);
}

async function sha256digest({data}) {
  return crypto.subtle.digest('SHA-256', data);
}

var ed25519Browser = {
  generateKeyPair,
  sha256digest,
  ...ed25519__namespace
};

module.exports = ed25519Browser;
